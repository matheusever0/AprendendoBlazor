@page "/"

<PageTitle>Index</PageTitle>

<h1>@Message</h1>


<div class="row">
    <div class="col-2 text-right">
        <b>On Focus: </b>
    </div>
    <div class="col-6">
        <input type="text" placeholder="On Focus"
               class="blazor-input"
               @onfocus="OnFocusCustomEvent" />
    </div>
</div>

<br />

<div class="row">
    <div class="col-2 text-right">
        <b>Mouse Events: </b>
    </div>
    <div class="col-6">
        <button @onclick="OnClickEvent"
                @ondblclick="OnDoubleClickEvent"
                @onmousedown="OnMouseDownEvent"
                @onmousemove="OnMouseDownEvent"
                @onmouseout="OnMouseOutEvent"
                @onmouseover="OnMouseOverEvent"
                @onmouseup="OnMouseUpEvent">
            Button Manual (Functions)
        </button>
        <br /> <br />
        <button @onclick="OnMouseEvent"
                @ondblclick="OnMouseEvent"
                @onmousedown="OnMouseEvent"
                @onmousemove="OnMouseEvent"
                @onmouseout="OnMouseEvent"
                @onmouseover="OnMouseEvent"
                @onmouseup="OnMouseEvent">
            Button OnMouseEvent (Switch)
        </button>
        <br /> <br />
        <button @onclick="@(e => ChangeMessageControl(e, 100))">
            Lambda Expression
        </button>
    </div>
</div>

<br />

<div class="row">
    <div class="col-2 text-right">
        <b>On Paste: </b>
    </div>
    <div class="col-6">
        <input type="text" placeholder="On Past"
               class="blazor-input"
               @onpaste="OnPastEvent" />
    </div>
</div>




@code {

    public string Message { get; set; }

    protected void OnFocusCustomEvent()
    {
        this.Message = "Focus no campo de texto";
    }

    protected void OnPastEvent()
    {
        this.Message = "Colou elemento!";
    }
    protected void OnClickEvent()
    {
        this.Message = "On Click Event";
    }
    protected void OnDoubleClickEvent()
    {
        this.Message = "Double Click Event";
    }
    protected void OnMouseDownEvent()
    {
        this.Message = "On Mouse Down Event";
    }
    protected void OnMouseOutEvent()
    {
        this.Message = "On Mouse Out Event";
    }
    protected void OnMouseOverEvent()
    {
        this.Message = "On Mouse Over Event";
    }

    protected void OnMouseUpEvent()
    {
        this.Message = "On Mouse Up Event";
    }

    protected void OnMouseEvent(MouseEventArgs e)
    {
        switch (e.Type)
        {
            case "click":
                this.Message = "On Click Event";
                break;
            case "mouseout":
                this.Message = "On Mouse Out";
                break;
        }
    }

    protected void ChangeMessageControl(MouseEventArgs e, int elementId)
    {
        this.Message = $"Element number {elementId}";
    }


}
