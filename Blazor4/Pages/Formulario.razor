@page "/formulario"
@using Blazor4.Repository


<h1>Formulário</h1>


<br />
@if (listaDePessoas.Any())
{
    <table class="table">

        <thead>
            <tr>
                <th>Nome</th>
                <th>Email</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in listaDePessoas)
            {
                <tr>

                    <th>@item.Nome</th>
                    <th>@item.Email</th>
                    <td>
                        <a class="btn btn-dark" @onclick="@(e => BuscarDados(item.Id))">Editar</a>
                        <a class="btn btn-danger" @onclick="@(e => Deletar(item.Id))">Deletar</a>
                    </td>


                </tr>
            }
        </tbody>
    </table>
}
<br />
<br />



<EditForm Model="pessoa" OnValidSubmit="FormSubmit">
    <p>
        <label>Nome: </label>
        <InputText @bind-Value="pessoa.Nome"></InputText>
    </p>

    <p>
        <label>Email: </label>
        <InputText @bind-Value="pessoa.Email"></InputText>
    </p>

    <p>
        <label>Documento: </label>
        <InputText @bind-Value="pessoa.Documento"></InputText>
    </p>

    <p>
        <label>Anos na Empresa: </label>
        <InputNumber @bind-Value="pessoa.AnosNaEmpresa"></InputNumber>
    </p>

    <p>
        <label>Aniversário: </label>
        <InputDate @bind-Value="pessoa.Aniversario"></InputDate>
    </p>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button type="submit" @onclick="FormSubmit">Salvar</button>
</EditForm>

@code {

#nullable disable


    List<Pessoa> listaDePessoas = new List<Pessoa>();
    PessoaRepository pessoaRep = new PessoaRepository();
    Pessoa pessoa = new Pessoa();

    protected override async Task OnInitializedAsync()
    {
        listaDePessoas = await pessoaRep.List();
    }

    private async Task FormSubmit()
    {
        if (pessoa.Id > 0)
        {
            await pessoaRep.Edit(pessoa);
        }
        else
        {
            await pessoaRep.Create(pessoa);
        }

        await CarregarDados();
    }

    private async Task BuscarDados(int id)
    {
        if (id > 0)
        {
            pessoa = await pessoaRep.Get(id);
        }

    }

    private async Task Deletar(int id)
    {
        if (id > 0)
        {
            await pessoaRep.Delete(id);
        }

        await CarregarDados();

    }

    private async Task CarregarDados()
    {
        pessoa = new Pessoa();
        listaDePessoas = await pessoaRep.List();
        StateHasChanged();
    }
}
